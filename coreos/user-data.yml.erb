#cloud-config

coreos:
  update:
    group: beta
    reboot-strategy: off
  units:
    - name: settimezone.service
      command: start
      content: |
        [Unit]
        Description=Set the timezone

        [Service]
        ExecStart=/usr/bin/timedatectl set-timezone <%= ENV["TIMEZONE"] %>
        RemainAfterExit=yes
        Type=oneshot
    - name: docker-tcp.socket
      command: start
      enable: true
      content: |
        [Unit]
        Description=Docker Socket for the API

        [Socket]
        ListenStream=2375
        Service=docker.service
        BindIPv6Only=both

        [Install]
        WantedBy=sockets.target
    - name: redis.service
      command: start
      enable: true
      content: |
        [Unit]
        Description=Redis Server
        After=docker.service
        Requires=docker.service

        [Service]
        TimeoutStartSec=0
        User=core
        Restart=on-failure
        ExecStartPre=-/usr/bin/docker kill redis
        ExecStartPre=-/usr/bin/docker rm redis
        ExecStartPre=/usr/bin/mkdir -p /home/core/data
        ExecStartPre=/usr/bin/docker pull redis:latest
        ExecStart=/usr/bin/docker run --name redis -p 6379:6379 -v /home/core/data:/data redis
        ExecStop=/usr/bin/docker stop redis

        [Install]
        WantedBy=multi-user.target
    - name: sap-bot.service
      command: start
      enable: true
      content: |
        [Unit]
        Description=Sap bot Server
        After=docker.service
        Requires=docker.service

        [Service]
        TimeoutStartSec=0
        User=core
        Restart=on-failure
        ExecStartPre=-/usr/bin/docker kill sap-bot
        ExecStartPre=-/usr/bin/docker rm sap-bot
        ExecStartPre=/usr/bin/docker pull quay.io/wantedly/sap-bot:latest
        ExecStart=/usr/bin/docker run --name sap-bot --link="redis" -p 8080:8080 -e HUBOT_NAME=<%= ENV["HUBOT_NAME"] %> -e HUBOT_SLACK_TOKEN=<%= ENV["HUBOT_SLACK_TOKEN"] %> -e HUBOT_GOOGLE_CSE_KEY=<%= ENV["HUBOT_GOOGLE_CSE_KEY"] %> -e HUBOT_GOOGLE_CSE_ID=<%= ENV["HUBOT_GOOGLE_CSE_ID"] %> -v /var/run/docker.sock:/var/run/docker.sock -v /home/core/.env:/opt/.env -v /home/core/.ssh/private_key:/root/.ssh/aws-ec2-tokyo.pem quay.io/wantedly/sap-bot
        ExecStop=/usr/bin/docker stop sap-bot

        [Install]
        WantedBy=multi-user.target
write_files:
  - path: /etc/ssh/sshd_config
    permissions: "0600"
    owner: root:root
    content: |
      # Use most defaults for sshd configuration.
      UsePrivilegeSeparation sandbox
      Subsystem sftp internal-sftp

      PermitRootLogin no
      PasswordAuthentication no
      ChallengeResponseAuthentication no
  - path: /etc/ntp.conf
    content: |
      # Common pool
      server 0.pool.ntp.org
      server 1.pool.ntp.org
      server 2.pool.ntp.org
      server 3.pool.ntp.org

      # - Allow only time queries, at a limited rate.
      # - Allow all local queries (IPv4, IPv6)
      restrict default nomodify nopeer noquery limited kod
      restrict 127.0.0.1
      restrict [::1]
